<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9534874f-7a61-47ae-8fca-3355f917c6e2" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/bookings/permissions.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bookings/serializers.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/bookings/urls.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Marketplace/settings.py" beforeDir="false" afterPath="$PROJECT_DIR$/Marketplace/settings.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Marketplace/urls.py" beforeDir="false" afterPath="$PROJECT_DIR$/Marketplace/urls.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db.sqlite3" beforeDir="false" afterPath="$PROJECT_DIR$/db.sqlite3" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/prueba.http" beforeDir="false" afterPath="$PROJECT_DIR$/prueba.http" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DjangoConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)">
    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2uMG2TFRmu1hNW5JxukslmiPg0a" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "HTTP Request.prueba | 📅 1️⃣ Listar reservas del usuario autenticado.executor": "Run",
    "HTTP Request.prueba | 📅 2️⃣ Crear una reserva.executor": "Run",
    "HTTP Request.prueba | 📅 3️⃣ Obtener detalles de una reserva específica.executor": "Run",
    "HTTP Request.prueba | 📅 4️⃣ Actualizar estado de una reserva (Pendiente → Confirmada).executor": "Run",
    "HTTP Request.prueba | 📌 1️⃣ Listar servicios (con filtros opcionales).executor": "Run",
    "HTTP Request.prueba | 📌 1️⃣ Registro de usuario.executor": "Run",
    "HTTP Request.prueba | 📌 2️⃣ Crear un servicio (Solo profesionales).executor": "Run",
    "HTTP Request.prueba | 📌 2️⃣ Inicio de sesión y obtención de token JWT.executor": "Run",
    "HTTP Request.prueba | 📌 3️⃣ Obtener datos del usuario autenticado (Reemplaza <ACCESS_TOKEN>).executor": "Run",
    "HTTP Request.prueba | 📌 3️⃣ Obtener detalles de un servicio específico.executor": "Run",
    "HTTP Request.prueba | 📌 4️⃣ Actualizar perfil del usuario.executor": "Run",
    "HTTP Request.prueba | 📌 4️⃣ Editar un servicio (Solo dueño).executor": "Run",
    "HTTP Request.prueba | 📌 5️⃣ Eliminar cuenta del usuario.executor": "Run",
    "HTTP Request.prueba | 📌 5️⃣ Eliminar un servicio (Solo dueño).executor": "Run",
    "RunOnceActivity.OpenDjangoStructureViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Django Server.DjangoProject">
    <configuration name="prueba | 📅 1️⃣ Listar reservas del usuario autenticado" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/prueba.http" executionIdentifier="📅 1️⃣ Listar reservas del usuario autenticado" index="11" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="prueba | 📌 2️⃣ Crear un servicio (Solo profesionales)" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/prueba.http" executionIdentifier="📌 2️⃣ Crear un servicio (Solo profesionales)" index="7" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="prueba | 📅 2️⃣ Crear una reserva" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/prueba.http" executionIdentifier="📅 2️⃣ Crear una reserva" index="12" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="prueba | 📅 3️⃣ Obtener detalles de una reserva específica" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/prueba.http" executionIdentifier="📅 3️⃣ Obtener detalles de una reserva específica" index="13" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="prueba | 📅 4️⃣ Actualizar estado de una reserva (Pendiente → Confirmada)" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/prueba.http" executionIdentifier="📅 4️⃣ Actualizar estado de una reserva (Pendiente → Confirmada)" index="14" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="DjangoProject" type="Python.DjangoServer" factoryName="Django server">
      <module name="DjangoProject" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="launchJavascriptDebuger" value="false" />
      <option name="port" value="8000" />
      <option name="host" value="" />
      <option name="additionalOptions" value="" />
      <option name="browserUrl" value="" />
      <option name="runTestServer" value="false" />
      <option name="runNoReload" value="false" />
      <option name="useCustomRunCommand" value="false" />
      <option name="customRunCommand" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.prueba | 📅 4️⃣ Actualizar estado de una reserva (Pendiente → Confirmada)" />
        <item itemvalue="HTTP Request.prueba | 📅 2️⃣ Crear una reserva" />
        <item itemvalue="HTTP Request.prueba | 📅 3️⃣ Obtener detalles de una reserva específica" />
        <item itemvalue="HTTP Request.prueba | 📅 1️⃣ Listar reservas del usuario autenticado" />
        <item itemvalue="HTTP Request.prueba | 📌 2️⃣ Crear un servicio (Solo profesionales)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-PY-243.25659.43" />
        <option value="bundled-python-sdk-181015f7ab06-4df51de95216-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-243.25659.43" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9534874f-7a61-47ae-8fca-3355f917c6e2" name="Changes" comment="" />
      <created>1742050823336</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1742050823336</updated>
      <workItem from="1742050824239" duration="1531000" />
      <workItem from="1742218911049" duration="816000" />
      <workItem from="1742393442846" duration="822000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>